/*
 * This Java source file was generated by the Gradle 'init' task.
 */
import org.junit.jupiter.api.Test;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.Arguments;
import org.junit.jupiter.params.provider.MethodSource;

import static org.junit.jupiter.api.Assertions.*;

import java.util.stream.Stream;

class NoteTest {
	Note note = null;
	
    @ParameterizedTest
    @MethodSource("namesData")
    void test_Note_getName(String name, String expected) {
    	note = Note.of(name, 3);
        assertEquals(expected, note.getName());
    }
    
    @ParameterizedTest
    @MethodSource("notesData")
    void test_Note_getNote(float noteIn) {
       note = Note.of("Adam", noteIn);
       float expected = noteIn;
       assertEquals(expected, note.getNote());
    }
    
    @Test 
    void test_Note_of_name_null() {
       assertThrows(Exception.class, () -> Note.of(null, 3));
    }
    
    @Test
    void test_Note_of_name_empty() {
    	assertThrows(Exception.class, () -> Note.of("  ", 3));
    }
    
    @Test
    void test_Note_of_note_outside_range() {
    	assertThrows(Exception.class, () -> Note.of("Adam", 1));
    }
    
    private static Stream<Arguments> namesData() {
        return Stream.of(
          Arguments.of("Adam", "Adam"),
          Arguments.of("   Adam   ", "Adam")
        );
    }
    
    private static Stream<Arguments> notesData() {
        return Stream.of(
          Arguments.of(2.0f),
          Arguments.of(6.0f),
          Arguments.of(3.5f)
        );
    }
}
